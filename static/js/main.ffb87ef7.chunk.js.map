{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","components/Loader/Loader.tsx","api.ts","helpers/helpers.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/HeaderNavLink/HeaderNavLink.tsx","components/Navigation/Navigation.tsx","components/Layout/Layout.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNotFound","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","columnNames","PersonLink","person","name","sex","slug","to","cn","PersonItem","born","died","mother","motherName","father","fatherName","PeopleTable","people","useParams","length","map","PeoplePage","useState","setPeople","isTableLoading","setIsTableLoading","error","setError","isTableVisible","isErrorVisible","useEffect","visiblePeople","peopleMap","Map","forEach","set","peopleWithParents","get","createPeopleWithParents","catch","errorName","finally","HeaderNavLink","text","isActive","Navigation","role","Layout","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ffb87ef7.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nexport const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\n\nexport const columnNames = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\nexport const createPeopleWithParents = (\n  visiblePeople: Person[],\n  peopleMap: Map<string, Person>,\n): Person[] => {\n  return visiblePeople.map(person => {\n    const mother = peopleMap.get(person.motherName);\n    const father = peopleMap.get(person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nconst FEMALE = 'f';\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn('has-text-link', {\n        'has-text-danger': sex === FEMALE,\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  slug: string | undefined;\n};\n\nexport const PersonItem: React.FC<Props> = ({ person, slug }) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={cn({\n        'has-background-warning': slug === person.slug,\n      })}\n    >\n      <td>\n        <PersonLink\n          person={person}\n        />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? <PersonLink person={person.mother} />\n          : person.motherName || '-'}\n      </td>\n      <td>\n        {person.father\n          ? <PersonLink person={person.father} />\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { columnNames } from '../../helpers/helpers';\nimport { PersonItem } from '../PersonItem/PersonItem';\n\ntype Props = {\n  people : Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n\n        {people.length === 0\n          ? (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )\n          : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  {columnNames.map(name => (\n                    <th key={name}>{name}</th>\n                  ))}\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonItem\n                    person={person}\n                    slug={slug}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { createPeopleWithParents } from '../../helpers/helpers';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isTableLoading, setIsTableLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const isTableVisible = !isTableLoading && !error;\n  const isErrorVisible = !isTableLoading && error;\n\n  useEffect(() => {\n    setIsTableLoading(true);\n\n    getPeople()\n      .then(visiblePeople => {\n        const peopleMap = new Map<string, Person>();\n\n        visiblePeople.forEach(person => {\n          peopleMap.set(person.name, person);\n        });\n\n        // eslint-disable-next-line max-len\n        const peopleWithParents = createPeopleWithParents(visiblePeople, peopleMap);\n\n        setPeople(peopleWithParents);\n      })\n      .catch(errorName => {\n        setError(`Something went wrong: ${errorName}`);\n      })\n      .finally(() => {\n        setIsTableLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isTableLoading && <Loader />}\n\n      {isTableVisible && (\n        <PeopleTable\n          people={people}\n        />\n      )}\n\n      {isErrorVisible && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          {error}\n        </p>\n      )}\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { NavLink, To } from 'react-router-dom';\n\ntype Props = {\n  to: To,\n  text: string,\n};\n\nexport const HeaderNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => cn(\n      'navbar-item', {\n        'has-background-grey-lighter': isActive,\n      },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { HeaderNavLink } from '../HeaderNavLink/HeaderNavLink';\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <HeaderNavLink to=\"/\" text=\"Home\" />\n\n        <HeaderNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from '../Navigation/Navigation';\n\nexport const Layout: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport React from 'react';\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { Layout } from './components/Layout/Layout';\n\nexport const App: React.FC = () => (\n  <Routes>\n    <Route path=\"/\" element={<Layout />}>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"*\" element={<PageNotFound />} />\n\n      <Route path=\"people\" element={<PeoplePage />}>\n        <Route path=\":slug\" element={<PeoplePage />} />\n      </Route>\n    </Route>\n  </Routes>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}